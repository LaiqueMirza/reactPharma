{"version":3,"sources":["component/logIn/logIn.js","component/redux/action/index.js","component/admin/navBar/navBar.js","component/admin/inventory/inventory.js","component/admin/admin.js","component/sales/sales.js","component/medicine/medicine.js","component/addSales/addSales.js","component/orders/orders.js","component/admin/teams/teams.js","App.js","reportWebVitals.js","component/redux/reducer/loginAdmin.js","component/redux/reducer/loginSales.js","component/redux/reducer/index.js","index.js"],"names":["LogIn","history","useHistory","dispatch","useDispatch","useState","username","setUsername","password","setPassword","className","htmlFor","name","type","placeholder","required","value","onChange","e","target","onClick","data","payload","push","loginSales","alert","NavBar","to","style","textDecoration","color","Inventory","medicineData","JSON","parse","localStorage","getItem","console","log","map","item","manufacturerName","price","stock","discount","every","Admin","Sales","Medicine","setName","setManufacturerName","setPrice","setDiscount","setStock","useEffect","setItem","stringify","parseInt","medicineObject","AddSales","firstName","setFirstName","lastName","setLastName","dob","setDob","gender","setGender","expYrs","setExpYrs","for","addSalesObject","addSalesData","Orders","orderId","setOrderId","customerName","setCustomerName","contactNumber","setContactNumber","products","setProducts","quantity","setQuantity","totalAmount","setTotalAmount","ordersObject","ordersData","Teams","App","exact","path","component","addSales","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","loginAdmin","state","action","allReducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f289250.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { loginAdmin,loginSales } from \"../redux/action\";\r\nimport \"./logIn.css\";\r\n\r\n    const LogIn = () => {\r\n        const history = useHistory();\r\n        const dispatch =useDispatch();\r\n        // const [login, setLogin] = useState(false)\r\n        // const [loginData, setLoginData] = useState()\r\n         const [username, setUsername] = useState(\"\")\r\n         const [password, setPassword] = useState(\"\")\r\n\r\nconst submitForm = () => {\r\n    if(username === \"test-admin\" && password === \"test-admin\"){\r\n        dispatch(loginAdmin())\r\n        history.push(\"/admin\")\r\n    } else if(username === \"test-sales\" && password === \"test-sales\"){\r\n        dispatch(loginSales())\r\n        history.push(\"/sales\")\r\n    } else {\r\n        alert(\"wrong details\")\r\n    }\r\n}\r\n\r\n        return(\r\n            <div className=\"loginFormDiv\">\r\n                <h3>\r\n                    LOGIN Form\r\n                </h3>\r\n                <div className=\"loginFormInnerDiv\">\r\n                <i className=\"fa fa-user userIcon-LoginForm\"></i>\r\n                <label \r\n                className=\"login-label\"\r\n                htmlFor=\"username\">Username</label>\r\n                <input \r\n                name='username'\r\n                 type='username'\r\n                 placeholder='username'\r\n                 required\r\n                 value={username}\r\n                 onChange={(e) => setUsername(e.target.value)}\r\n                 className=\"inputLogInForm\"\r\n                 />\r\n               <hr/>\r\n                <label\r\n                className=\"login-label\"\r\n                htmlFor=\"password\">Password</label>\r\n               <input \r\n               name='password' \r\n               type='password' \r\n               placeholder='Password' \r\n               required \r\n               value={password}\r\n               onChange={(e) => setPassword(e.target.value)}\r\n               className=\"inputLogInForm\"\r\n               />\r\n               <hr/>\r\n                <button\r\n                type=\"submit\"\r\n                onClick={submitForm}\r\n                className=\"buttonLoginForm\"\r\n                >\r\n                    signIn\r\n                </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nexport default LogIn;\r\n","\r\nexport const loginAdmin=(data) => ({\r\n    type: \"LOGIN_ADMIN\",\r\n    payload: data\r\n})\r\n\r\nexport const loginSales=(data) => ({\r\n    type: \"LOGIN_SALES\",\r\n    payload: data\r\n})","import React, { useEffect, useState } from \"react\";\r\nimport \"./navBar.css\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { useHistory } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  // const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"navBar\">\r\n      <nav className=\"navBarNav\">\r\n        \r\n            <span className=\"navBarItems \">\r\n              <Link\r\n                to=\"/inventory\"\r\n                style={{ textDecoration: \"none\", color: \"whitesmoke\" }}\r\n              >\r\n                Inventory\r\n              </Link>\r\n            </span>\r\n            <span className=\"navBarItems \">\r\n              <Link\r\n                to=\"/teams\"\r\n                style={{ textDecoration: \"none\", color: \"whitesmoke\" }}\r\n              >\r\n                Teams\r\n              </Link>\r\n            </span>\r\n            <span className=\"navBarItems \">\r\n              <Link\r\n                to=\"/manageOrders\"\r\n                style={{ textDecoration: \"none\", color: \"whitesmoke\" }}\r\n              >\r\n                Manage Orders\r\n              </Link>\r\n            </span>\r\n      </nav>\r\n      <span className=\"navBarItems \">\r\n              <Link\r\n                to=\"/\"\r\n                style={{ textDecoration: \"none\", color: \"whitesmoke\" }}\r\n              >\r\n                Log Out\r\n              </Link>\r\n       </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport \"./inventory.css\"\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from \"../navBar/navBar\";\r\n\r\nconst Inventory = () => {\r\n  let medicineData = JSON.parse(localStorage.getItem(\"medicine\"));\r\n\r\n  console.log(medicineData);\r\nconst deleteInventory= (name) =>{\r\n  console.log(name);\r\n  console.log(\"e\");\r\n  medicineData.every(item => {\r\n    if(item.name === name){\r\n      return false\r\n    }\r\n    return true\r\n  })\r\n  console.log(medicineData)\r\n}\r\n  return (\r\n    <div className=\"inventoryDiv\">\r\n      <NavBar />\r\n      <div className=\"inventoryHeadDiv\">\r\n        <h2>Inventory</h2>\r\n        <button className=\"inventoryButton\">\r\n          <Link\r\n            to=\"/medicine\"\r\n            style={{ textDecoration: \"none\", color: \"#f9f9f9\" }}\r\n          >\r\n            ADD MEDICINE\r\n          </Link>\r\n        </button>\r\n      </div>\r\n      {medicineData ? (\r\n        <table className=\"inventory-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Manufacturer Name</th>\r\n              <th>Price</th>\r\n              <th>Stock</th>\r\n              <th>Discount</th>\r\n              <th>Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {medicineData.map((item) => (\r\n              <tr>\r\n                <td>{item.name}</td>\r\n                <td>{item.manufacturerName}</td>\r\n                <td>{item.price}</td>\r\n                <td>{item.stock}</td>\r\n                <td>{item.discount}</td>\r\n                <td><i \r\n                onClick={deleteInventory(item.name)}\r\n                className=\"fa fa-trash deleteIcon\"></i></td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <h3>There is no medicine to display</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n","import React from 'react';\r\nimport \"./admin.css\"\r\nimport NavBar from \"./navBar/navBar\"\r\nimport Inventory from \"./inventory/inventory\"\r\nimport {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  userParam,\r\n} from \"react-router-dom\";\r\n\r\nconst Admin = () => {\r\n    return (\r\n    // <BrowserRouter>\r\n\r\n      <div>\r\n           <Inventory/>\r\n \r\n           {/* component={Inventory} /> */}\r\n        {/*  <Route path=\"/teams\" component={teams} />\r\n          <Route path=\"/manageOrders\" component={manageOrders} /> */}\r\n  \r\n    </div>\r\n    // </BrowserRouter>\r\n\r\n    \r\n    //     <h2>\r\n    //         Admin Page\r\n    //     </h2>\r\n    //     <button\r\n        \r\n    //     >\r\n    //         <Link\r\n    //             to=\"/medicine\"\r\n    //             style={{ textDecoration: \"none\", color: \"Black\" }}\r\n    //           >\r\n    //             ADD MEDICINE\r\n    //           </Link>\r\n    //     </button> \r\n    //     <button\r\n        \r\n    //     >\r\n    //         <Link\r\n    //             to=\"/addSales\"\r\n    //             style={{ textDecoration: \"none\", color: \"Black\" }}\r\n    //           >\r\n    //             ADD SALES EXECUTIVE\r\n    //           </Link>\r\n    //     </button>\r\n    //      <button\r\n        \r\n    //     >\r\n    //         <Link\r\n    //             to=\"/orders\"\r\n    //             style={{ textDecoration: \"none\", color: \"Black\" }}\r\n    //           >\r\n    //             ADD ORDERS\r\n    //           </Link>\r\n    //     </button>\r\n    // </div> \r\n    );\r\n}\r\n \r\nexport default Admin;","import React from 'react';\r\nimport \"./sales.css\"\r\n\r\nconst Sales = () => {\r\n    return ( <div>\r\n        sales\r\n    </div> );\r\n}\r\n \r\nexport default Sales;","import React, { useEffect, useState } from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport \"./medicine.css\"\r\n\r\nconst Medicine = () => {\r\n    \r\nconst [name, setName] = useState();\r\nconst [manufacturerName, setManufacturerName] = useState();\r\nconst [price, setPrice] = useState();\r\nconst [discount, setDiscount] = useState();\r\nconst [stock, setStock] = useState();\r\n\r\nconst history = useHistory();\r\nlet medicineData;\r\nuseEffect(() => {\r\n    medicineData = JSON.parse(localStorage.getItem(\"medicine\"))  \r\n    if(!medicineData){\r\n        localStorage.setItem(\"medicine\", JSON.stringify([]))\r\n    }\r\n},[])\r\n   \r\n  const medicineSubmit =(e) => {\r\n    if(name && manufacturerName && discount && price && stock){\r\n      let medicineObject = {\r\n        name,\r\n        manufacturerName,\r\n        price,\r\n        discount,\r\n        stock,\r\n      }\r\n      let medicineData = JSON.parse(localStorage.getItem(\"medicine\"))  \r\n      medicineData.push(medicineObject);\r\n        console.log(medicineData,\"1111111111111>>>>>>>>>>>>>>\");\r\n        localStorage.setItem(\"medicine\", JSON.stringify(medicineData));\r\n      history.push(\"/admin\")\r\n    } else{\r\n    alert(\"Fill All The Details Correctly\")\r\n  }\r\n  }\r\n//   Name, Manufacturer Name, Price, Stock, Discount\r\n    return ( <div className=\"medicineDiv\">\r\n  <h2>ADD NEW MEDICINE</h2>\r\n         <div \r\n         className=\"medicine-form\"\r\n        >\r\n         <label className=\"medicine-label\" htmlFor=\"name\">Name*</label>\r\n        <br></br>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className=\"medicineInput\"\r\n          required\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <br></br>\r\n        <label className=\"medicine-label\" htmlFor=\"manufacturerName\">Manufacturer Name*</label>\r\n        <br></br>\r\n        <input\r\n          type=\"text\"\r\n          name=\"manufacturerName\"\r\n          className=\"medicineInput\"\r\n          required\r\n          placeholder=\"Manufacturer Name\"\r\n          value={manufacturerName}\r\n          onChange={(e) => setManufacturerName(e.target.value)}\r\n        />\r\n        <br></br>\r\n       <label className=\"medicine-label\" htmlFor=\"price\">price*</label>\r\n        <br></br>\r\n        <input\r\n          type=\"number\"\r\n          name=\"price\"\r\n          className=\"medicineInput\"\r\n          required\r\n          value={price}\r\n          onChange={(e) => setPrice(parseInt(e.target.value))}\r\n        />\r\n        <br></br>\r\n        <label className=\"medicine-label\" htmlFor=\"discount\">discount*</label>\r\n        <br></br>\r\n        <input\r\n          type=\"text\"\r\n          name=\"discount\"\r\n          className=\"medicineInput\"\r\n          required\r\n          placeholder=\"400612\"\r\n          value={discount}\r\n          onChange={(e) => setDiscount(e.target.value)}\r\n        />\r\n        <br></br>\r\n        <label className=\"medicine-label\" htmlFor=\"stock\">Stock</label>\r\n        <br></br>\r\n        <input\r\n          type=\"number\"\r\n          name=\"stock\"\r\n          className=\"medicineInput\"\r\n          value={stock}\r\n          onChange={(e) => setStock(parseInt(e.target.value))}\r\n        />\r\n        <br></br>\r\n      \r\n        <br></br>\r\n        \r\n        <input\r\n        className=\"medicine-submitButton\" \r\n        type=\"submit\" \r\n        value=\"Submit\"\r\n        onClick={medicineSubmit}\r\n        />\r\n    \r\n      </div>\r\n    </div> );\r\n}\r\n \r\nexport default Medicine;","import React, { useEffect, useState } from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport \"./addSales.css\"\r\n\r\nconst AddSales = () => {\r\n    \r\nconst [firstName, setFirstName] = useState();\r\nconst [lastName, setLastName] = useState();\r\nconst [dob, setDob] = useState();\r\nconst [gender, setGender] = useState();\r\nconst [expYrs, setExpYrs] = useState();\r\n\r\nconst history = useHistory();\r\nlet addSalesData;\r\nuseEffect(() => {\r\n    addSalesData = JSON.parse(localStorage.getItem(\"addSales\"))  \r\n    if(!addSalesData){\r\n        localStorage.setItem(\"addSales\", JSON.stringify([]))\r\n    }\r\n},[])\r\n   \r\n  const addSalesSubmit =(e) => {\r\n    if(firstName && lastName && gender && dob && expYrs){\r\n      let addSalesObject = {\r\n        firstName,\r\n        lastName,\r\n        dob,\r\n        gender,\r\n        expYrs,\r\n      }\r\n      let addSalesData = JSON.parse(localStorage.getItem(\"addSales\"))  \r\n      addSalesData.push(addSalesObject);\r\n        console.log(addSalesData,\"1111111111111>>>>>>>>>>>>>>\");\r\n        localStorage.setItem(\"addSales\", JSON.stringify(addSalesData));\r\n      history.push(\"/admin\")\r\n    } else{\r\n    alert(\"Fill All The Details Correctly\")\r\n  }\r\n  }\r\n  // First Name, Last Name, Date of birth, Gender, Experience Years\r\n    return ( <div className=\"addSalesDiv\">\r\n  <h2>ADD THE SALE EXECUTER</h2>\r\n         <div \r\n         className=\"addSales-form\"\r\n        >\r\n         <label className=\"addSales-label\" htmlFor=\"firstName\">First Name*</label>\r\n        <br></br>\r\n        <input\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          className=\"addSalesInput\"\r\n          required\r\n          placeholder=\"First Name\"\r\n          value={firstName}\r\n          onChange={(e) => setFirstName(e.target.value)}\r\n        />\r\n        <br></br>\r\n        <label className=\"addSales-label\" htmlFor=\"lastName\">Last Name*</label>\r\n        <br></br>\r\n        <input\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          className=\"addSalesInput\"\r\n          required\r\n          placeholder=\"Last Name\"\r\n          value={lastName}\r\n          onChange={(e) => setLastName(e.target.value)}\r\n        />\r\n        <br></br>\r\n       <label className=\"addSales-label\" htmlFor=\"dob\">Date Of Birth*</label>\r\n        <br></br>\r\n        <input\r\n          type=\"date\"\r\n          name=\"dob\"\r\n          className=\"addSalesInput\"\r\n          required\r\n          value={dob}\r\n          onChange={(e) => setDob(e.target.value)}\r\n        />\r\n        <br></br>\r\n        <label className=\"addSales-label\" htmlFor=\"gender\">Gender*</label>\r\n        <br></br>\r\n        {/* <input\r\n          type=\"radio\"\r\n          name=\"gender\"\r\n          className=\"addSalesInput\"\r\n          required\r\n          placeholder=\"400612\"\r\n          value={gender}\r\n          onChange={(e) => setGender(e.target.value)}\r\n        /> */}\r\n            <input type=\"radio\" name=\"gender\" value=\"male\"\r\n            onClick={() => setGender(\"Male\")}\r\n            />\r\n            <label for=\"male\">Male</label>\r\n            <input type=\"radio\" name=\"gender\" value=\"female\"\r\n            onClick={() => setGender(\"Female\")}\r\n            />\r\n            <label for=\"female\">Female</label>\r\n            <input type=\"radio\" name=\"gender\" value=\"other\"\r\n            onClick={() => setGender(\"Others\")}\r\n            />\r\n            <label for=\"other\">Other</label>\r\n        <br></br>\r\n        <label className=\"addSales-label\" htmlFor=\"expYrs\">Experience Years*</label>\r\n        <br></br>\r\n        <input\r\n          type=\"text\"\r\n          name=\"expYrs\"\r\n          className=\"addSalesInput\"\r\n          value={expYrs}\r\n          onChange={(e) => setExpYrs(e.target.value)}\r\n        />\r\n        <br></br>\r\n      \r\n        <br></br>\r\n        \r\n        <input\r\n        className=\"addSales-submitButton\" \r\n        type=\"submit\" \r\n        value=\"Submit\"\r\n        onClick={addSalesSubmit}\r\n        />\r\n    \r\n      </div>\r\n    </div> );\r\n}\r\n \r\nexport default AddSales;","import React, { useEffect, useState } from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport \"./orders.css\"\r\n\r\nconst Orders = () => {\r\n    \r\nconst [orderId, setOrderId] = useState();\r\nconst [customerName, setCustomerName] = useState();\r\nconst [contactNumber, setContactNumber] = useState();\r\nconst [products, setProducts] = useState();\r\nconst [quantity, setQuantity] = useState();\r\nconst [totalAmount, setTotalAmount] = useState();\r\n\r\nconst history = useHistory();\r\nlet ordersData;\r\nuseEffect(() => {\r\n    ordersData = JSON.parse(localStorage.getItem(\"orders\"))  \r\n    if(!ordersData){\r\n        localStorage.setItem(\"orders\", JSON.stringify([]))\r\n    }\r\n},[])\r\n   \r\n  const ordersSubmit =(e) => {\r\n    if(orderId && customerName && products && contactNumber && quantity && totalAmount){\r\n      let ordersObject = {\r\n        orderId,\r\n        customerName,\r\n        contactNumber,\r\n        products,\r\n        quantity,\r\n        totalAmount\r\n      }\r\n      let ordersData = JSON.parse(localStorage.getItem(\"orders\"))  \r\n      ordersData.push(ordersObject);\r\n        console.log(ordersData,\"1111111111111>>>>>>>>>>>>>>\");\r\n        localStorage.setItem(\"orders\", JSON.stringify(ordersData));\r\n      history.push(\"/admin\")\r\n    } else{\r\n    alert(\"Fill All The Details Correctly\")\r\n  }\r\n  }\r\n// OrderId, Customer Name, Customer Contact Number, Products, Purchase quantity of each product, Total Amount\r\n\r\n    return ( <div className=\"ordersDiv\">\r\n  <h2>ADD THE ORDER</h2>\r\n         <div \r\n         className=\"orders-form\"\r\n        >\r\n         <label className=\"orders-label\" htmlFor=\"orderId\">Order Id*</label>\r\n        <br></br>\r\n        <input\r\n          type=\"text\"\r\n          name=\"orderId\"\r\n          className=\"ordersInput\"\r\n          required\r\n          placeholder=\"Order Id \"\r\n          value={orderId}\r\n          onChange={(e) => setOrderId(e.target.value)}\r\n        />\r\n        <br></br>\r\n        <label className=\"orders-label\" htmlFor=\"customerName\">Customer Name*</label>\r\n        <br></br>\r\n        <input\r\n          type=\"text\"\r\n          name=\"customerName\"\r\n          className=\"ordersInput\"\r\n          required\r\n          placeholder=\"Customer Name\"\r\n          value={customerName}\r\n          onChange={(e) => setCustomerName(e.target.value)}\r\n        />\r\n        <br></br>\r\n       <label className=\"orders-label\" htmlFor=\"contactNumber\">Contact Number*</label>\r\n        <br></br>\r\n        <input\r\n          type=\"number\"\r\n          name=\"contactNumber\"\r\n          className=\"ordersInput\"\r\n          required\r\n          value={contactNumber}\r\n          onChange={(e) => setContactNumber(parseInt(e.target.value))}\r\n        />\r\n        <br></br>\r\n        <label className=\"orders-label\" htmlFor=\"products\">Products*</label>\r\n        <br></br>\r\n        <input\r\n          type=\"text\"\r\n          name=\"products\"\r\n          className=\"ordersInput\"\r\n          required\r\n          placeholder=\"400612\"\r\n          value={products}\r\n          onChange={(e) => setProducts(e.target.value)}\r\n        />\r\n        <br></br>\r\n        <label className=\"orders-label\" htmlFor=\"quantity\">Quantity</label>\r\n        <br></br>\r\n        <input\r\n          type=\"number\"\r\n          name=\"quantity\"\r\n          className=\"ordersInput\"\r\n          value={quantity}\r\n          onChange={(e) => setQuantity(parseInt(e.target.value))}\r\n        />\r\n        <br></br>\r\n        <label className=\"orders-label\" htmlFor=\"totalAmount\">Total Amount*</label>\r\n        <br></br>\r\n        <input\r\n          type=\"number\"\r\n          name=\"totalAmount\"\r\n          className=\"ordersInput\"\r\n          value={totalAmount}\r\n          onChange={(e) => setTotalAmount(parseInt(e.target.value))}\r\n        />\r\n        <br></br>\r\n        <br></br>\r\n        \r\n        <input\r\n        className=\"orders-submitButton\" \r\n        type=\"submit\" \r\n        value=\"Submit\"\r\n        onClick={ordersSubmit}\r\n        />\r\n    \r\n      </div>\r\n    </div> );\r\n}\r\n \r\nexport default Orders;","import React from 'react';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from '../navBar/navBar';\r\n\r\nconst Teams = () => {\r\n    return ( <div className=\"teamsDiv\">\r\n      <NavBar />\r\n        <h3>Teams</h3>\r\n        <button\r\n        \r\n            >\r\n                <Link\r\n                    to=\"/addSales\"\r\n                    style={{ textDecoration: \"none\", color: \"Black\" }}\r\n                  >\r\n                    ADD SALES EXECUTIVE\r\n                  </Link>\r\n            </button>\r\n    </div> );\r\n}\r\n \r\nexport default Teams;","import React, { useEffect } from \"react\";\nimport LogIn from \"./component/logIn/logIn\"\nimport Admin from \"./component/admin/admin\"\nimport Sales from \"./component/sales/sales\"\nimport \"./App.css\";\n\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link,\n  userParam,\n} from \"react-router-dom\";\nimport Medicine from \"./component/medicine/medicine\";\nimport addSales from \"./component/addSales/addSales\";\nimport Orders from \"./component/orders/orders\";\nimport Inventory from \"./component/admin/inventory/inventory\";\nimport Teams from \"./component/admin/teams/teams\";\n\nfunction App() {\n  // useEffect(() =>{\n  //   console.log(\"use\")\n  // },[])\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={LogIn} />\n          <Route path=\"/admin\" component={Admin} />\n          <Route path=\"/sales\" component={Sales} />\n          <Route path=\"/addSales\" component={addSales} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/medicine\" component={Medicine} />\n          <Route path=\"/inventory\" component={Inventory} />\n          <Route path=\"/teams\" component={Teams} />\n      </Switch> \n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nconst loginAdmin = (state = false, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ADMIN': {\r\n            return !state\r\n        };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n export default loginAdmin;","\r\nconst loginSales = (state = false, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_SALES': {\r\n            return !state\r\n        };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n export default loginSales;","import { combineReducers } from 'redux';\r\n\r\nimport loginAdmin from './loginAdmin.js';\r\nimport loginSales from './loginSales.js';\r\n\r\nconst allReducers = combineReducers({\r\n    loginAdmin,\r\n    loginSales\r\n})\r\n\r\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux';\nimport allReducers from './component/redux/reducer';\n\nconst store = createStore(allReducers)\n\nReactDOM.render(\n  <Provider store={store} >\n          <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}